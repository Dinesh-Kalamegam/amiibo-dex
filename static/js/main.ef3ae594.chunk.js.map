{"version":3,"sources":["components/AmiiboCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","height","amiiboCardImageContainer","display","justifyContent","alignItems","textAlign","marginBottom","AmiiboCard","amiibo","classes","info","amiiboSeries","gameSeries","head","tail","type","Card","className","CardHeader","title","name","subheader","release","eu","alt","src","image","style","CardContent","Object","entries","map","k","v","Typography","variant","color","component","appTitle","padding","fontSize","pageContent","flexDirection","amiiboGrid","flexWrap","rowGap","columnGap","pagination","marginTop","App","useState","darkMode","setDarkMode","amiiboData","setAmiiboData","amiiLength","setAmiiLength","page","setPage","theme","createTheme","palette","useEffect","axios","get","then","res","data","length","catch","error","console","log","ThemeProvider","CssBaseline","Switch","checked","onChange","Paper","slice","numberOfResults","CircularProgress","Pagination","count","Math","floor","event","value","showFirstButton","showLastButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef3ae594.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: 300,\n        height:600\n    },\n    amiiboCardImageContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"350px\",\n        textAlign: \"center\",\n        marginBottom:\"1rem\"\n    }\n}));\n\nfunction AmiiboCard({ amiibo }) {\n    const classes = useStyles();\n    const info = {\n        \"Amiibo Series\": amiibo.amiiboSeries,\n        \"Game Series\": amiibo.gameSeries,\n        \"Head\": amiibo.head,\n        \"Tail\": amiibo.tail,\n        \"Type\": amiibo.type\n    }\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={amiibo.name}\n                subheader={\n                    amiibo.release.eu!=null ? \"EU Release : \" + amiibo.release.eu: \"EU Release : Not Available \"\n                }\n            />\n            <div className={classes.amiiboCardImageContainer}>\n                <img\n                    alt={amiibo.name}\n                    src={amiibo.image}\n                    style={{\n                        width: \"200px\"\n                    }}\n                />\n\n            </div>\n            <CardContent>\n                {\n                    Object.entries(info).map(([k, v]) => (\n                        <Typography key={k} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {k}: {v}\n                        </Typography>\n                    ))\n                }\n\n            </CardContent>\n\n        </Card>\n    )\n}\n\nexport default AmiiboCard\n","import { useState, useEffect } from 'react';\nimport { Paper, Switch, Typography, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { Pagination } from '@material-ui/lab';\nimport axios from 'axios'\nimport AmiiboCard from './components/AmiiboCard'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(() => ({\n  appTitle: {\n    padding: \"2rem\",\n    fontSize:\"3rem\",\n    textAlign:\"center\"\n  },\n  pageContent: {\n    padding: \"2rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n\n  amiiboGrid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    rowGap: \"2rem\",\n    columnGap: \"2rem\"\n  },\n\n  pagination: {\n    marginTop: \"2rem\"\n  }\n}));\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [amiiboData, setAmiiboData] = useState(null)\n  const [amiiLength, setAmiiLength] = useState(1)\n  const [page, setPage] = useState(1)\n  const numberOfResults = 20\n  const classes = useStyles()\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  useEffect(() => {\n    axios.get(\"https://amiiboapi.com/api/amiibo/\")\n      .then(res => {\n        setAmiiboData(res.data.amiibo)\n        setAmiiLength(res.data.amiibo.length)\n      })\n      .catch(error => console.log(error))\n  }, [])\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Typography variant=\"h1\" className={classes.appTitle}>\n        AmiiboDex\n        <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\n      </Typography>\n\n      <Paper className={classes.pageContent}>\n        <div className={classes.amiiboGrid}>\n          {\n            amiiboData ?\n            amiiboData\n              .slice(1 + (numberOfResults * (page - 1)), (numberOfResults + 1) + (numberOfResults * (page - 1)))\n              .map(amiibo => (<AmiiboCard key={amiibo.head+amiibo.tail} amiibo={amiibo} />)) : <CircularProgress color=\"secondary\" />\n          }\n        </div>\n\n        <Pagination\n          className={classes.pagination}\n          color=\"primary\"\n          count={Math.floor(amiiLength / numberOfResults)}\n          onChange={(event, value) => setPage(value)}\n          showFirstButton\n          showLastButton\n        />\n\n      </Paper>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}